schema {
    query: Query
    mutation: Mutation
    subscription: Subscription
}

type airSensors {
    _measurement: String
    _time: String
    _start: String 
    _stop: String 
    sensor_id: String 
    _field: String
    _value: Float
}

type airSensorsSubscription {
    _measurement: String
    sensor_id: String 
    _field: String
    _value: Float
}

type SensorResult {
    success: Boolean!
    errors: [String]
    post: airSensorsSubscription!
}

type SensorsResult {
    success: Boolean!
    errors: [String]
    post: [airSensors]
}

type sensorCreated{
    success: Boolean!
    errors: [String]
    post: String!
}

type Subscription {
    messageSensor: SensorResult!
}

type Query {
    listSensorID: SensorsResult!
    getSensorID(sensor_id: String!): SensorsResult!
}

type Mutation {
    createSensor(sensor_id: String, _field: String, _value: Float) : sensorCreated
}